# Give your project a name. :)
workspace(name = "astrid_tech")

# Load the repository rule to download an http archive.
load(
    "@bazel_tools//tools/build_defs/repo:http.bzl",
    "http_archive"
)

# Download rules_haskell and make it accessible as "@rules_haskell".
http_archive(
    name = "rules_haskell",
    strip_prefix = "rules_haskell-0.13",
    urls = ["https://github.com/tweag/rules_haskell/archive/v0.13.tar.gz"],
    sha256 = "b4e2c00da9bc6668fa0404275fecfdb31beb700abdba0e029e74cacc388d94d6",
)

load(
    "@rules_haskell//haskell:repositories.bzl",
    "rules_haskell_dependencies",
)

# Setup all Bazel dependencies required by rules_haskell.
rules_haskell_dependencies()

load(
    "@rules_haskell//haskell:toolchain.bzl",
    "rules_haskell_toolchains",
)

load(
    "@rules_haskell//haskell:cabal.bzl",
    "stack_snapshot"
)

stack_snapshot(
    name = "stackage",
    packages = [
        "aeson",
        "base",
        "bytestring",
        "containers",
        "directory",
        "either",
        "filepath",
        "frontmatter",
        "hie-bios",
        "hspec",
        "hspec-discover",
        "lens",
        "morpheus-graphql",
        "opaleye",
        "optparse-applicative",
        "servant",
        "system-fileio",
        "text",
        "time",
        "transformers",
        "uuid",
    ],
    snapshot = "lts-18.11",
)

# Download a GHC binary distribution from haskell.org and register it as a toolchain.
rules_haskell_toolchains()

# See https://github.com/aherrmann/stack_snapshot_example/blob/0db0b540583e3061ac2b7b154a60d726ef227311/WORKSPACE#L78-L105
http_archive(
    name = "hspec-discover",
    strip_prefix = "hspec-discover-2.8.3",
    urls = [
        "https://hackage.haskell.org/package/hspec-discover-2.8.3/hspec-discover-2.8.3.tar.gz",
    ],
    sha256 = "9a99fbb1dba6ad3ae9eb222ca073103b037492b8ec21a23e4320ea8404ce3227",
    # Thanks to this archive, we can make executable "hspec-discover"
    # available to other rules (see "@hspec-discover" references).
    # To build the executable, we use the haskell_cabal_binary rule:
    build_file_content = """
load(
    "@rules_haskell//haskell:cabal.bzl",
    "haskell_cabal_binary",
)
haskell_cabal_binary(
    name = "hspec-discover",
    srcs = glob(["**"]),
    deps = [
        "@stackage//:base",
        "@stackage//:directory",
        "@stackage//:filepath",
        "@stackage//:hspec-discover",
    ],
    visibility = ["//visibility:public"],
)
""",
)

# Load nixpkgs_git_repository from rules_nixpkgs,
# which was already initialized by rules_haskell_dependencies above.
load(
    "@io_tweag_rules_nixpkgs//nixpkgs:nixpkgs.bzl",
    "nixpkgs_git_repository",
    "nixpkgs_package",
    "nixpkgs_python_configure",
)

nixpkgs_python_configure(
    repository = "@nixpkgs",
)

# Fetch a version of nixpkgs from GitHub.
# For more information see the documentation of rules_nixpkgs at
# https://github.com/tweag/rules_nixpkgs/blob/master/README.md
nixpkgs_git_repository(
    name = "nixpkgs",
    revision = "21.05",
    # sha256 = â€¦
)

load(
    "@rules_haskell//haskell:nixpkgs.bzl",
    "haskell_register_ghc_nixpkgs",
)

# Fetch a GHC binary distribution from nixpkgs and register it as a toolchain.
# For more information:
# https://api.haskell.build/haskell/nixpkgs.html#haskell_register_ghc_nixpkgs
haskell_register_ghc_nixpkgs(
    repository = "@nixpkgs",
    attribute_path = "ghc",
    version = "8.10.4",
)
