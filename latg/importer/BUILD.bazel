package(default_visibility = ["//visibility:public"])

load(
    "@rules_haskell//haskell:defs.bzl",
    "haskell_toolchain_library",
    "haskell_library",
    "haskell_binary",
)

haskell_library(
    name = "file-schema",
    srcs = [
        "FileSchema.hs",
    ],
    deps = [
        "//latg:base", 
        "@stackage//:aeson",
        "@stackage//:text",
        "@stackage//:time",
        "@stackage//:uuid",
        "@stackage//:vector",
    ],
)

haskell_library(
    name = "insert-schema",
    srcs = [
        "InsertSchema.hs",
    ],
    deps = [
        "//latg:base", 
        "//latg/db:hs", 
        "@stackage//:opaleye",
    ],
)

haskell_library(
    name = "load-content",
    srcs = [
        "LoadContent.hs",
    ],
    deps = [
        ":file-schema",
        ":insert-schema",
        "//latg:base", 
        "@stackage//:aeson",
        "@stackage//:bytestring",
        "@stackage//:filepath",
        "@stackage//:frontmatter",
        "@stackage//:htoml",
        "@stackage//:text",
        "@stackage//:yaml",
    ],
)

haskell_binary(
    name = "importer",
    main_function = "LATG.Importer.Main.main",
    srcs = [
        ":Main.hs", 
    ],
    deps = [
        "//latg:base", 
        ":file-schema",
        "@stackage//:bytestring",
        "@stackage//:opaleye",
        "@stackage//:text",
    ],
)
